@model ZoranMedia.Domain.Entities.Client

@{
    ViewData["Title"] = "Create Client";
}

@using (Html.BeginForm("Create", "Client",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a New Client</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSubscribed, "IsSubscribed", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="form-check form-switch">
                @Html.CheckBoxFor(model => model.IsSubscribed, new { @class = "form-check-input", data_toggle = "switch", @id = "IsSubscribed" })             
            </div>
            @Html.ValidationMessageFor(model => model.IsSubscribed, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="create-bookmark-btn" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>